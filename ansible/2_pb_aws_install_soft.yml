- name: Install Nginx, Mysql-client, AWScli, Docker
  hosts: test1
  become: yes

  tasks:
  - name: Updating Repositories
    shell: "apt update"
    changed_when: false
  - name: Installing Nginx
    apt: name=nginx state=latest
  - name: Starting Nginx service
    service: name=nginx state=started enabled=yes
  - name: Copy Nginx-conf
    copy: src=files/default.proxy dest=/etc/nginx/sites-available/default
#    copy: src=files/default.https dest=/etc/nginx/sites-available/default
    notify: reload Nginx
  - name: Installing Mysql-client
    apt: name=mysql-client state=latest
  - name: Installing AWScli
    apt: name=awscli state=latest
  - name: Installing Docker
    apt: name=docker.io state=latest
  - name: Starting Docker service
    service: name=docker state=started enabled=yes
  - name: Add $USER to docker Group
    shell: "usermod -aG docker ubuntu"
    changed_when: false

  - name: Check Docker service is running
    shell: "systemctl status docker.service"
    changed_when: false
    register: out1
  - debug: msg="{{out1.stdout_lines}}"
  - name: Check if ubuntu user is in docker Group
    shell: "grep docker /etc/group"
    changed_when: false
    register: out2
  - debug: msg="{{out2.stdout_lines}}"
  - name: Check Nginx
    shell: "ps aux | grep nginx"
    changed_when: false
    register: out_ng
  - debug: msg="{{out_ng.stdout_lines}}"
  - name: Check Mysql-client verion
    shell: "mysql --version"
    changed_when: false
    register: out_my
  - debug: msg="{{out_my.stdout_lines}}"
  - name: Check AWScli verion
    shell: "aws --version"
    changed_when: false
    register: out_aws
  - debug: msg="{{out_aws.stdout_lines}}"

  handlers:
  - name: reload Nginx
    shell: "nginx -s reload"

